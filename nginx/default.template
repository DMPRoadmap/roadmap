server {
  server_name ${NGINX_HOST};

  listen ${NGINX_PORT};
  listen [::]:${NGINX_PORT};

  root /var/www/html/public;
  index index.html;

  ## Configuration
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-Server $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_hide_header X-Powered-By;

  client_max_body_size 10M;

  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
    try_files $uri @rails;

    access_log off;
    gzip_static on; # to serve pre-gzipped version

    expires max;
    add_header Cache-Control public;

    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  ## client
  location / {
    try_files $uri @rails;
  }

  location @rails {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://dmpopidor:3000;
  }

  # Enables WS support
  location /cable {
    proxy_pass http://dmpopidor:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade websocket;
    proxy_set_header Connection Upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /directus/ {
    proxy_pass http://directus:8055/;
  }

  location /health {
    access_log off;
    add_header 'Content-Type' 'application/json';
    return 200 '{ "status": "Healthy" }';
  }
}

name: Build the base DMPRoadmap environment

on: [push, pull_request]

jobs:
  build_dmproadmap:
  
    - uses: actions/upload-artifact@master
      with:
        name: dmproadmap artifacts
        path: public/

    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: 'Determine Ruby Version (from Gemfile.lock)'
        run: echo ::set-env name=RUBY_VERSION::$(echo `cat ./Gemfile.lock | grep -A 1 'RUBY VERSION' | grep 'ruby' | grep -oE '[0-9]\.[0-9]'`)

      - name: 'Install Ruby'
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: 'Setup default configuration'
        run: |
          # Make copies of all the example config files
          cp config/database.yml.sample config/database.yml
          cp config/initializers/contact_us.rb.example config/initializers/contact_us.rb
          cp config/initializers/devise.rb.example config/initializers/devise.rb
          cp config/initializers/recaptcha.rb.example config/initializers/recaptcha.rb
          cp config/initializers/wicked_pdf.rb.example config/initializers/wicked_pdf.rb

      - name: 'Retrieve Gems from the cache'
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: 'Bundle Install'
        run: |
          gem install bundler -v 1.17.2
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3 --without pgsql rollbar aws

      - name: 'Retrieve Yarn packages from the cache'
        uses: actions/cache@v1
        with:
          path: node_modules/
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: 'Determine wkhtmltopdf location'
        run: echo ::set-env name=WICKED_PDF_PATH::$(echo `bundle exec which wkhtmltopdf`)

      - name: 'Yarn Install'
        run: |
          yarn install

      - uses: actions/upload-artifact@master
          with:
            name: dmproadmap artifacts
            path: public/

name: Tests - MySQL

on: [push, pull_request]

jobs:
  mysql:
    runs-on: ubuntu-latest

    env:
      DB_ADAPTER: mysql2
      MYSQL_USER: root
      MYSQL_PWD: root
      RAILS_ENV: test

    steps:
    # Checkout the repo
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: 'Install MySQL Packages'
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client libmysqlclient-dev

    - name: 'Determine Ruby and Bundler Versions from Gemfile.lock'
      run: |
        echo ::set-env name=RUBY_VERSION::$(echo `cat ./Gemfile.lock | grep -A 1 'RUBY VERSION' | grep 'ruby' | grep -oE '[0-9]\.[0-9]'`)
        echo ::set-env name=BUNDLER_VERSION::$(echo `cat ./Gemfile.lock | grep -A 1 'BUNDLED WITH' | grep -oE '[0-9]\.[0-9]'`)

    - name: 'Install Ruby'
      uses: actions/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}

    # Copy all of the example configs over
    - name: 'Setup Default Configuration'
      run: |
        # Make copies of all the example config files
        cp config/database.yml.sample config/database.yml
        cp config/initializers/contact_us.rb.example config/initializers/contact_us.rb
        cp config/initializers/devise.rb.example config/initializers/devise.rb
        cp config/initializers/recaptcha.rb.example config/initializers/recaptcha.rb
        cp config/initializers/wicked_pdf.rb.example config/initializers/wicked_pdf.rb

    # Try to retrieve the gems from the cache
    - name: 'Cache Gems'
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-

    - name: 'Bundle Install'
      run: |
        gem install bundler -v ${{ env.BUNDLER_VERSION }}
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3 --without pgsql rollbar aws

    # Try to retrieve the yarn JS dependencies from the cache
    - name: 'Cache Yarn Packages'
      uses: actions/cache@v1
      with:
        path: node_modules/
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-yarn-
          ${{ runner.os }}-

    - name: 'Determine wkhtmltopdf location'
      run: echo ::set-env name=WICKED_PDF_PATH::$(echo `bin/bundle exec which wkhtmltopdf`)

    - name: 'Yarn Install'
      run: |
        yarn install
        
    - name: 'Start MySQL'
      run: sudo systemctl start mysql

    - name: 'Setup Test DB'
      run: bin/rails db:setup RAILS_ENV=test

    - name: 'Migrate DB'
      run: bin/rails db:migrate RAILS_ENV=test
      
    - name: 'Compile Assets'
      run: |
        bin/rails webpacker:compile RAILS_ENV=test
        bin/rails assets:precompile RAILS_ENV=test

    - name: 'Run Karma Tests'
      run: |
        yarn add karma
        yarn run test

    - name: 'Run Rspec Unit and Functional Tests'
      run: |
        bin/rspec spec/models/ spec/policies/ spec/services/ spec/helpers/
        bin/rspec spec/controllers/ spec/presenters/ spec/requests/ spec/views
        bin/rspec spec/mixins/

    # Only run Integration tests if the PR or Push is to master or development branches
    - name: 'Run Rspec Integration Tests'
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/development'
      run: bin/rspec spec/features/

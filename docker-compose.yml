version: '3.9'

services:
  dmpopidor:
    build:
      context: .
      args:
        - DB_ADAPTER=${DB_ADAPTER:-postgres}
        - DB_USERNAME=${DB_USERNAME:-postgres}
        - DB_PASSWORD=${DB_PASSWORD:-changeme}
    profiles: ["prod"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - RAILS_ENV=production
      - RAKE_ENV=production
      - PORT=${APP_PORT:-3000}
      - DB_ADAPTER=${DB_ADAPTER:-postgresql}
      - DB_POOL_SIZE=${DB_POOL_SIZE:-16}
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-roadmap}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-changeme}
      - DMPROADMAP_HOST=${DMPROADMAP_HOST:-dmpopidor}
      - RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES:-true}
      - RAILS_LOG_LEVEL=${RAILS_LOG_LEVEL:-debug}
      - RAILS_LOG_TO_STDOUT=${RAILS_LOG_TO_STDOUT:-true}
      - DOMAIN=${DOMAIN:-app}
      - ENABLE_SHIBBOLETH=${ENABLE_SHIBBOLETH:-false}
      - ENABLE_THIRD_PARTY_FORM=${ENABLE_THIRD_PARTY_FORM:-false}
      - WEB_CONCURRENCY=${WEB_CONCURRENCY:-2}
      - RAILS_MAX_THREADS=${RAILS_MAX_THREADS:-5}
      - WICKED_PDF_PATH=${WICKED_PDF_PATH:-/usr/local/bin/wkhtmltopdf}
      - DRAGONFLY_AWS=${DRAGONFLY_AWS:-false}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE:-my_secret_key}
      - SECRET_KEY=${SECRET_KEY:-my_secret_key}
      - DEVISE_PEPPER=${DEVISE_PEPPER:-my_pepper}
      - DRAGON_FLY_SECRET=${DRAGON_FLY_SECRET:-my_secret_key}
      - RECAPTCHA_SITE_KEY=${RECAPTCHA_SITE_KEY:-11111}
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY:-22222}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/1}
      - AWS_REGION
      - AWS_BUCKET_NAME
      - BUNDLE_GEMFILE
      - ROLLBAR_ENV
      - ROLLBAR_ACCESS_TOKEN
      - PATTERN
      - RAILS_RELATIVE_URL_ROOT
      - TRANSLATION_API_ROADMAP
      - TRANSLATION_API_CLIENT
      # MetaDoRe API
      - METADORE_LANDING_PAGE_URL
      - METADORE_API_BASE_URL
      - METADORE_SEARCH_PATH
      - METADORE_ENABLED
      - METADORE_SEARCH_SIZE
      - METADORE_API_KEY
    working_dir: /app
    volumes:
      - ./log:/app/log
    healthcheck:
      test: ["CMD-SHELL", "curl -s -v -o - http://localhost:3000 2>&1 | grep 'HTTP/1.1 200 OK'"]
      interval: ${DMPOPIDOR_HEALTHCHECK_INTERVAL:-30s}
      timeout: ${DMPOPIDOR_HEALTHCHECK_TIMEOUT:-30s}
      retries: ${DMPOPIDOR_HEALTHCHECK_RETRIES:-3}
      start_period: ${POSTGRES_HEALTHCHECK_START_PERIOD:-0s}
    networks:
      - dmpopidor_network

  directus:
    container_name: directus_app
    image: directus/directus:${DIRECTUS_VERSION:-10.10.5}
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - ${DIRECTUS_PORT:-8055}:8055
    environment:
      - KEY=${DIRECTUS_KEY:-255d861b-5ea1-5996-9aa3-922530ec40b1}
      - SECRET=${DIRECTUS_SECRET:-6116487b-cda1-52c2-b5b5-c8022c45e263}
      - ADMIN_EMAIL=${DIRECTUS_ADMIN_EMAIL:-admin@example.com}
      - ADMIN_PASSWORD=${DIRECTUS_ADMIN_PASSWORD:-changeme}
      - DB_CLIENT=pg
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-changeme}
      - DB_DATABASE=${DIRECTUS_DATABASE:-directus}
      - PUBLIC_URL=http://${DMP_SERVER_NAME:-0.0.0.0}:${NGINX_PORT:-8080}/directus
    volumes:
      - ./directus/data/uploads:/directus/uploads
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8055/server/ping || exit 0" ]
      interval: ${DIRECTUS_HEALTHCHECK_INTERVAL:-10s}
      timeout: ${DIRECTUS_HEALTHCHECK_TIMEOUT:-30s}
      retries: ${DIRECTUS_HEALTHCHECK_RETRIES:-5}
      start_period: ${DIRECTUS_HEALTHCHECK_START_PERIOD:-30s}
    networks:
      - dmpopidor_network

  nginx:
    image: nginx:1.25.4-alpine-slim
    ports:
      - ${NGINX_PORT:-8080}:80
    depends_on:
      dmpopidor:
        condition: service_healthy
    environment:
    - NGINX_HOST=0.0.0.0
    - NGINX_PORT=80
    volumes:
      - ./nginx/default.template:/etc/nginx/templates/default.conf.template:ro
      - ./public/:/var/www/html/public
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:80/health || exit 1"]
      interval: ${NGINX_HEALTHCHECK_INTERVAL:-30s}
      timeout: ${NGINX_HEALTHCHECK_TIMEOUT:-30s}
      retries: ${NGINX_HEALTHCHECK_RETRIES:-3}
      start_period: ${NGINX_HEALTHCHECK_START_PERIOD:-0s}
    networks:
      - dmpopidor_network

  postgres:
    image: postgres:15.6-alpine3.19
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
      - POSTGRES_DB=${DB_NAME:-roadmap}
      - LC_COLLATE=fr_FR.utf8
      - LC_CTYPE=fr_FR.utf8
      - LANG=fr_FR.utf8
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -U ${POSTGRES_USER:-postgres} -h localhost -p 5432"]
      interval: ${POSTGRES_HEALTHCHECK_INTERVAL:-30s}
      timeout: ${POSTGRES_HEALTHCHECK_TIMEOUT:-30s}
      retries: ${POSTGRES_HEALTHCHECK_RETRIES:-3}
      start_period: ${POSTGRES_HEALTHCHECK_START_PERIOD:-0s}
    networks:
      - dmpopidor_network

  redis:
    image: redis:7.2.4-alpine3.19
    # command: "redis-server /etc/redis/redis.conf"
    ports:
      - 6379:6379
    volumes:
      - ./redis/sysctl.conf:/etc/sysctl.conf
      - ./redis/redis.conf:/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: ${DMPOPIDOR_HEALTHCHECK_INTERVAL:-30s}
      timeout: ${DMPOPIDOR_HEALTHCHECK_TIMEOUT:-30s}
      retries: ${DMPOPIDOR_HEALTHCHECK_RETRIES:-3}
      start_period: ${POSTGRES_HEALTHCHECK_START_PERIOD:-0s}
    networks:
      - dmpopidor_network

networks:
  dmpopidor_network:
    driver: "bridge"

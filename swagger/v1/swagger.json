{
  "openapi": "3.0.1",
  "info": {
    "title": "maDMP OPIDoR API",
    "description": "Please use the /authenticate route before using the API. You can paste the generated token in the prompt displayed by clicking on the \"Authorize\" button",
    "version": "1.0",
    "contact":{
      "email" : "dmp.opidor@inist.fr",
      "name" : "DMP OPIDoR support staff"

    },
   "license": {
      "name" : "MIT license",
      "url": "https://spdx.org/licenses/MIT.html"
   }
   } ,
  "paths": {
    "/api/v1/authenticate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request an access token to be then authorized to use the API to explore DMPs that you own or are shared with you. The access_token value has to be entered in the above green \"Authorize\" form ",

        "requestBody": {
          "content": {
            "application/json": {
              "schema":{
                "type":"object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "default": "authorization_code"
                  },
                  "email": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  }
                },
                "example":{
                  "grant_type":"authorization_code",
                  "email":"super_admin@example.com",
                  "code": "16daksGaj8Yex8-48545fgoA"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "text/plain": {
                "schema":{
                  "type": "string",
                  "example": "successful"
                }
              }

                  }
                }
              },
        "x-codegen-request-body-name": "authentication"
            }
      },
      "/api/v1/madmp/plans/{id}": {
        "get": {
          "tags": [
            "Plans"
          ],
          "summary": "Returns a user's plan as JSON in the OPIDoR Standard (Science Europe compliant and structured information) or RDA DMP Common Standard compliant format",
          "security":[
            {
              "bearerAuth": []
            }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Local plan identifier generated by the application",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "export_format",
              "in": "query",
              "description": "Export format (standard/rda)",
              "required": true,
              "schema": {
                "type": "string",
                "default": "standard",
                "enum": [
                  "standard",
                  "rda"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful",
              "content": {}
            }
            }
        }
      },
      "/api/v1/madmp/plans/research_outputs/{uuid}": {
        "get": {
          "tags": [
            "Plans"
          ],
          "summary": "Returns a user's plan for a given research output as JSON document, in a OPIDoR standard or RDA DMP Common Standard compliant format",
          "security":[
            {
              "bearerAuth": []
            }],
          "parameters": [
            {
              "name": "uuid",
              "in": "path",
              "description": "ResearchOutput UUID provided by the application",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "export_format",
              "in": "query",
              "description": "Export format (standard/rda)",
              "required": true,
              "schema": {
                "type": "string",
                "default": "standard",
                "enum": [
                  "standard",
                  "rda"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful",
              "content": {}
            }
            }
        }
     },
      "/api/v1/madmp/plans/import": {
        "post": {
          "tags": [
            "Plans"
          ],
          "summary": "Allows for the import and creation of a new plan based on a OPIDoR standard or RDA DMP Common Standard, format-compliant DMP",
          "security":[
            {
              "bearerAuth": []
            }],
          "parameters": [
            {
              "name": "import_format",
              "in": "query",
              "description": "Import format (standard/rda)",
              "required": true,
              "schema": {
                "type": "string",
                "default": "standard",
                "enum": [
                  "standard",
                  "rda"
                ]
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "successful",
              "content": {}
            }
          },
          "x-codegen-request-body-name": "data"
        }
      },
    "/api/v1/madmp/fragments/{id}": {
      "get": {
        "tags": [
          "MadmpFragments"
        ],
        "summary": "Returns a fragment of information as JSON using a madmp fragment identifier",
        "security":[
          {
            "bearerAuth": []
          }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "JSON fragment local identifier (only applicable with dbid or dmp_id)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "With the slim mode, only first-level information and/or fragments'identifiers will be represented. Using the fat mode, a recursive reconstitution of the information is produced, including all levels of information",
            "schema": {
              "type": "string",
              "default": "fat",
              "enum": [
                "slim",
                "fat"
              ],
              "example":"fat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
        },
          "404":{
            "description": "not found"
          }
        }

      },
      "put": {
        "tags": [
          "MadmpFragments"
        ],
        "summary": "Allows for the update of a fragment",
        "security":[
          {
            "bearerAuth": []
          }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Schema identifier",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties":{
                  "data":{
                "type": "object"
                  }
                },
          "example":{
                  "data":{

                  }
                },
          "description" : "description put"

              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful",
            "content": {}
          }
        },

        "x-codegen-request-body-name": "data"
      }

    },
    "/api/v1/madmp/schemas": {
      "get": {
        "tags": [
          "MadmpSchemas"
        ],
        "summary": "List of the available \"standards and customized\" forms'schemas",
        "security":[
          {
            "bearerAuth": []
          }],
        "responses": {
          "200": {
            "description": "successful",
            "content": {}
          }
          }
      }
    },
    "/api/v1/madmp/schemas/{id}": {
      "get": {
        "tags": [
          "MadmpSchemas"
        ],
        "summary": "Returns a specific form's schema as JSON using its id",
        "security":[
          {
            "bearerAuth": []
          }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Schema identifier",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {}
          }
          }
      }
    },

    "/api/v1/madmp/registries": {
      "get": {
        "tags": [
          "Registries"
        ],
        "summary": "Returns a list of all available registries",
        "security":[
          {
            "bearerAuth": []
          }],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json":{
                "schema":{
                  "type":"array"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          }
          }
      }
    },
    "/api/v1/madmp/registries/{name}": {
      "get": {
        "tags": [
          "Registries"
        ],
        "summary": "Returns a specific registry using its name",
        "security":[
          {
            "bearerAuth": []
          }],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {}
          }
        }
      }
    }

  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme":"bearer",
        "name": "Authorization",
        "in" :"header",
        "bearerFormat": "JWT",
        "description" : "Enter the access_token value without \" "
      }

    },

    "responses":{

      },
    "schemas" :{

  }

}
  }





